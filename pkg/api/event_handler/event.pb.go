// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: api/event_handler/event.proto

package event_handler

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId        string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventType      string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EventEntity    string                 `protobuf:"bytes,3,opt,name=event_entity,json=eventEntity,proto3" json:"event_entity,omitempty"`
	EventVersion   int64                  `protobuf:"varint,4,opt,name=event_version,json=eventVersion,proto3" json:"event_version,omitempty"`
	EventTimestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=event_timestamp,json=eventTimestamp,proto3" json:"event_timestamp,omitempty"`
	EventPayload   *anypb.Any             `protobuf:"bytes,6,opt,name=event_payload,json=eventPayload,proto3" json:"event_payload,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_handler_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_handler_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_api_event_handler_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Event) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *Event) GetEventEntity() string {
	if x != nil {
		return x.EventEntity
	}
	return ""
}

func (x *Event) GetEventVersion() int64 {
	if x != nil {
		return x.EventVersion
	}
	return 0
}

func (x *Event) GetEventTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTimestamp
	}
	return nil
}

func (x *Event) GetEventPayload() *anypb.Any {
	if x != nil {
		return x.EventPayload
	}
	return nil
}

type Event_AppendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *Event_AppendRequest) Reset() {
	*x = Event_AppendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_handler_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_AppendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_AppendRequest) ProtoMessage() {}

func (x *Event_AppendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_handler_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_AppendRequest.ProtoReflect.Descriptor instead.
func (*Event_AppendRequest) Descriptor() ([]byte, []int) {
	return file_api_event_handler_event_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Event_AppendRequest) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type Event_ScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Operator QueryOperator `protobuf:"varint,2,opt,name=operator,proto3,enum=boardgames_backend.api.event_handler.QueryOperator" json:"operator,omitempty"`
	Start    *QueryParam   `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End      *QueryParam   `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Event_ScanRequest) Reset() {
	*x = Event_ScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_handler_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_ScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_ScanRequest) ProtoMessage() {}

func (x *Event_ScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_handler_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_ScanRequest.ProtoReflect.Descriptor instead.
func (*Event_ScanRequest) Descriptor() ([]byte, []int) {
	return file_api_event_handler_event_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Event_ScanRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event_ScanRequest) GetOperator() QueryOperator {
	if x != nil {
		return x.Operator
	}
	return QueryOperator_QUERY_OPERATOR_IN_RANGE
}

func (x *Event_ScanRequest) GetStart() *QueryParam {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Event_ScanRequest) GetEnd() *QueryParam {
	if x != nil {
		return x.End
	}
	return nil
}

type Event_LatestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Event_LatestRequest) Reset() {
	*x = Event_LatestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_event_handler_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_LatestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_LatestRequest) ProtoMessage() {}

func (x *Event_LatestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_event_handler_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_LatestRequest.ProtoReflect.Descriptor instead.
func (*Event_LatestRequest) Descriptor() ([]byte, []int) {
	return file_api_event_handler_event_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Event_LatestRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_api_event_handler_event_proto protoreflect.FileDescriptor

var file_api_event_handler_event_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x24, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x61, 0x70, 0x69, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfb, 0x04,
	0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x39,
	0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0c, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x52, 0x0a, 0x0d, 0x41, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xfa, 0x01,
	0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4f, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x33, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x46,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x42, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x1a, 0x1f, 0x0a, 0x0d, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xd4, 0x02, 0x0a, 0x0d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x5d, 0x0a,
	0x06, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x39, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x04,
	0x53, 0x63, 0x61, 0x6e, 0x12, 0x37, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x67, 0x61, 0x6d, 0x65,
	0x73, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x72,
	0x0a, 0x06, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x12, 0x39, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x67, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0x00, 0x42, 0xa3, 0x02, 0x0a, 0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x67, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x42,
	0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x41, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x6e,
	0x61, 0x75, 0x74, 0x2d, 0x63, 0x61, 0x74, 0x2f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x67, 0x61, 0x6d,
	0x65, 0x73, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0xa2, 0x02, 0x03, 0x42, 0x41, 0x45, 0xaa, 0x02, 0x22, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x67, 0x61,
	0x6d, 0x65, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0xca, 0x02, 0x22, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5c,
	0x41, 0x70, 0x69, 0x5c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0xe2, 0x02, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x24, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_event_handler_event_proto_rawDescOnce sync.Once
	file_api_event_handler_event_proto_rawDescData = file_api_event_handler_event_proto_rawDesc
)

func file_api_event_handler_event_proto_rawDescGZIP() []byte {
	file_api_event_handler_event_proto_rawDescOnce.Do(func() {
		file_api_event_handler_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_event_handler_event_proto_rawDescData)
	})
	return file_api_event_handler_event_proto_rawDescData
}

var file_api_event_handler_event_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_event_handler_event_proto_goTypes = []interface{}{
	(*Event)(nil),                 // 0: boardgames_backend.api.event_handler.Event
	(*Event_AppendRequest)(nil),   // 1: boardgames_backend.api.event_handler.Event.AppendRequest
	(*Event_ScanRequest)(nil),     // 2: boardgames_backend.api.event_handler.Event.ScanRequest
	(*Event_LatestRequest)(nil),   // 3: boardgames_backend.api.event_handler.Event.LatestRequest
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 5: google.protobuf.Any
	(QueryOperator)(0),            // 6: boardgames_backend.api.event_handler.QueryOperator
	(*QueryParam)(nil),            // 7: boardgames_backend.api.event_handler.QueryParam
	(*emptypb.Empty)(nil),         // 8: google.protobuf.Empty
}
var file_api_event_handler_event_proto_depIdxs = []int32{
	4, // 0: boardgames_backend.api.event_handler.Event.event_timestamp:type_name -> google.protobuf.Timestamp
	5, // 1: boardgames_backend.api.event_handler.Event.event_payload:type_name -> google.protobuf.Any
	0, // 2: boardgames_backend.api.event_handler.Event.AppendRequest.event:type_name -> boardgames_backend.api.event_handler.Event
	6, // 3: boardgames_backend.api.event_handler.Event.ScanRequest.operator:type_name -> boardgames_backend.api.event_handler.QueryOperator
	7, // 4: boardgames_backend.api.event_handler.Event.ScanRequest.start:type_name -> boardgames_backend.api.event_handler.QueryParam
	7, // 5: boardgames_backend.api.event_handler.Event.ScanRequest.end:type_name -> boardgames_backend.api.event_handler.QueryParam
	1, // 6: boardgames_backend.api.event_handler.EventServices.Append:input_type -> boardgames_backend.api.event_handler.Event.AppendRequest
	2, // 7: boardgames_backend.api.event_handler.EventServices.Scan:input_type -> boardgames_backend.api.event_handler.Event.ScanRequest
	3, // 8: boardgames_backend.api.event_handler.EventServices.Latest:input_type -> boardgames_backend.api.event_handler.Event.LatestRequest
	8, // 9: boardgames_backend.api.event_handler.EventServices.Append:output_type -> google.protobuf.Empty
	0, // 10: boardgames_backend.api.event_handler.EventServices.Scan:output_type -> boardgames_backend.api.event_handler.Event
	0, // 11: boardgames_backend.api.event_handler.EventServices.Latest:output_type -> boardgames_backend.api.event_handler.Event
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_api_event_handler_event_proto_init() }
func file_api_event_handler_event_proto_init() {
	if File_api_event_handler_event_proto != nil {
		return
	}
	file_api_event_handler_query_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_event_handler_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_handler_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_AppendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_handler_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_ScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_event_handler_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_LatestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_event_handler_event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_event_handler_event_proto_goTypes,
		DependencyIndexes: file_api_event_handler_event_proto_depIdxs,
		MessageInfos:      file_api_event_handler_event_proto_msgTypes,
	}.Build()
	File_api_event_handler_event_proto = out.File
	file_api_event_handler_event_proto_rawDesc = nil
	file_api_event_handler_event_proto_goTypes = nil
	file_api_event_handler_event_proto_depIdxs = nil
}
